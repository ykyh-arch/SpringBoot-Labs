<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--属性设置，源码位置：org.apache.ibatis.builder.xml.XMLConfigBuilder#propertiesElement-->
    <properties resource="demo1/config.properties"/>
    <!--以下是另外一种方式-->
    <!--<properties>
        <property name="jdbc.driver" value="com.mysql.jdbc.Driver"/>
        <property name="jdbc.url" value="jdbc:mysql://192.168.0.99:13306/lab-12-spring-mybatis?characterEncoding=UTF-8"/>
        <property name="jdbc.username" value="root"/>
        <property name="jdbc.password" value="mysql8@123456"/>
    </properties>-->
    <!--注册别名，对应的类：org.apache.ibatis.type.public class TypeAliasRegistry-->
    <typeAliases>
        <typeAlias type="cn.iocoder.springboot.labs.chat03.demo1.UserModel" alias="user" />
        <!--批量注册，别名名称默认会采用类名小写的方式-->
        <!--<package name="cn.iocoder.springboot.labs.chat03.demo1"/>-->
    </typeAliases>
    <!-- 环境配置，可以配置多个环境 -->
    <environments default="chat03-demo1">
        <!--
            environment用来对某个环境进行配置
            id：环境标识，唯一
         -->
        <environment id="chat03-demo1">
            <!-- 事务管理器工厂配置 -->
            <transactionManager type="org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"/>
            <!-- 数据源工厂配置，使用工厂来创建数据源 -->
            <!--<dataSource type="org.apache.ibatis.datasource.pooled.PooledDataSourceFactory">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://192.168.0.99:13306/lab-12-spring-mybatis?characterEncoding=UTF-8"/>
                <property name="username" value="root"/>
                <property name="password" value="mysql8@123456"/>
            </dataSource>-->
            <!--这里POOLED使用了内置别名-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <mapper resource="demo1/mapper/UserMapper.xml"/>
    </mappers>
</configuration>